
 <!DOCTYPE html>
<html>
<head>
<title>OTD</title>
<meta charset="UTF-8">

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Workbench&display=swap" rel="stylesheet">

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=PT+Sans+Narrow:wght@400;700&display=swap" rel="stylesheet">

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=PT+Sans+Narrow:wght@400;700&family=Saira+Condensed:wght@100;200;300;400;500;600;700;800;900&family=Saira:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">

<style>
/*
EFECTOS CSS ==
https://codepen.io/alvarotrigo/pen/xxLvyOG
https://codepen.io/alvarotrigo/pen/PoKMyzO
https://codepen.io/alvarotrigo/pen/bGrXmwM
https://codepen.io/alvarotrigo/pen/PoKMybE
https://codepen.io/derossi_s/pen/vpWMzb
*/


/*
FUENTES ===
https://fonts.google.com/specimen/Pacifico
https://fonts.google.com/specimen/PT+Sans+Narrow
https://fonts.google.com/specimen/Exo+2
https://fonts.google.com/specimen/Caveat
https://fonts.google.com/specimen/Shadows+Into+Light
https://fonts.google.com/specimen/Saira+Condensed
https://fonts.google.com/specimen/Satisfy
https://fonts.google.com/specimen/Indie+Flower
*/



/*

font-family: "Workbench", sans-serif;
font-optical-sizing: auto;
font-weight: 400;
font-style: normal;
font-variation-settings:
  "BLED" 0,
  "SCAN" 0;

  font-family: "Saira", sans-serif;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100;
	font-size: 16px;

*/


/*.pt-sans narrow-regular */
.titulo1{
	font-family: "PT Sans Narrow", sans-serif;
	font-weight: 400;
	font-style: normal;
}

.titulo2 { 

}

#ws{
	width: 18px;
}
.tabla{
  width: 100%;
  border-collapse: collapse;
	}
.tabla tr {
	}
.tabla tr td{
		padding: 0px 6px 0px 6px;
	}

.et0,.et1,.et2,.et3,.et4{
	font-size: 1rem;
  font-weight: bold; 
  text-align: center;
}
.et1{
  color: red; 
}
.et0{
  color: blue;
}
.et2{
	font-size: 1rem;
  color: #ffe;
  color: darkblue;
  background-color: yellow;
}
.et3{
  color: green;
}
.et4{
  color: darkblue;
  background-color: pink;
}
</style>
<link rel="stylesheet" type="text/css" href="estilos.css" />

<script>

/*

ToDo list
- publicar github
- pagina españa
- pagina europa

- redenar estilos y apiicacion 
- no va en brave ??
- revision de codigo
- organizar funciones
- lio de los campos numeros
- hiperenlace website icono
- mapa 
- chinquetas
- personalizar chinquetas organizar con el mapa

- crear pagina de prueba en github
- puedo tener subdominios ?
- debe ser publica ! 
- solo usarla para para publicar
- como anunciar la pagina en fbPage ?

- consulta envia tu enlace para publicar

DATOS
- datos en filas de texto, el primer campo indica la tabla
- cada tabla tiene una estructura 
- trabajan con array de cadenas

comandos (retornan array de cadenas):
- get (tabla) ; retorna una tabla (primer campo)
- join (tabla1,n.campo,tabla2,n.campo) ; une dos tablas por un campo comun
- sort (array,nc) ; ordenan por uno de los campos(nc)
- subEqual (tabla,nc,valor) ; cumplen la condicion nc=valor
- subFromTo (tabla,nc,valor1,valor2) ; cumplen valor1 < nc < valor2
- find (tabla,campo,texto) ; busca en una tabla algun campo con ese texto
- contains (tabla,texto) ; busca algun campo contenga el texto
- expand (tabla,ini,fin) ; entre las fechas dadas expande actividades repetidas
- extract(table,campos) ; extrae una serie de campos
- printAct(table) ; da formato e imprime una actividad
- now(tabla,ini,fin) ; expande lineas entre las fechas ini fin , actividades con repeticion

consultas:
* hay campos que tienen actividades que se repiten eso genera nuevas lineas pero solo si visualizo ese periodo
*. MADRID milongas ciudad ordenadas por fecha : dia;horario;nombre;organizador
*. SPAIN actividades en mi pais ordenadas por fecha : actividad;nombre;inicio;fin
 
filtro:
*. donde: continente, pais, ciudad, cerca de mi (ubicación ? a X km)
*. fecha: hoy, esta semana, en un mes, en un año, en adelante
*. tipo: todos,milonga,clases,festival,camp,maraton,concierto,otros
*. checkbox: mi ciudad, mi pais, todas ordenadas por fecha
*. checkbox: actividades ordenados por fecha

presentacion:
- segun consulta
- No esta tu actividad ? escribenos a : onlytangos@gmail.com

tablas:
* delimitadores ; #
* all todas las tablas
* local (loc)
* milonga|maraton|camp|festival|concierto|clases (act)
* dj|bailarin (rol)
* cantante|violin|piano|otros (mus)

axiomas:
1. los organizadores tienen algun evento en la lista, no necesitan linea propia
2. los bailarines no tienen porque tener clases y viceversa
3. las actividades tienen una localizacion
4. tablas terminales localizacion,rol,musicos

actividad:
- nombre
- organizador 
- pais
- población o mas cercana
- repeticion no|cada X dias (anuales no poner repeticion)
- programacion
-- localizacion (gps)
-- fecha hora inicio general
-- fecha hora de fin general
nota: (lista 0 solo hay una)
- personajes nombre y alias
- contacto
- owner

grupos musicales
- nombre
- componentes (lista): nombres

personajes:
- nombre
- rol: (puede tener varios) bailarin, dj, organizador 
- alias
- contacto
- musico: (puede tener varios)no|violin|canta|bandoneon

arañas para capturar información
https://www.danceus.org/events/argentine-tango/tango-festivals-marathons-worldwide/
https://tangocat.net/
https://www.tangomarathons.com/djs/

presentacion
filtro donde marcar que buscas
por todos los campos de la bbdd

*/
var tipos=['milonga','class','show','practice','musicLive'];
var diaSem=['sunday','monday','tuesday','wednesday','thursday','friday','saturday'];
var meses=['ENE','FEB','MAR','ABR','MAY','JUN','JUL','AGO','SEP','OCT','NOV','DIC'];

function app(){
	printNext7d('MILONGAS MADRID');
}

function now(data,dias){
// recorrer el eventos ver si estan en rango incluidos periodicos
// data: datos entrada
// d: dias desde hoy

// fecha entre ini y fin => en rango
// else mirar si tiene repeticion
//  - meter la repeticion la fecha en bucle por dias hasta fin +1 mes, si me paso ini o fin termino
//  -- si paso ini y no paso fin => esta en rango
//  -- si no llego a ini no esta en rango
//  -- sino paso fin no esta en rango
	
	// rango de fechas
	
	let res=[];

	let r1=new Date();
	let r2=clonaDate(r1);
	sumaDias(r2,dias);

	// adhoc campos
	let t1=3; // fecha inicio
	let h1=4; // hora inicio
	let t2=5; // fecha fin 
	let h2=6; // hora fin
	let rp=7; // repeticiones

	for (let j=0;j<data.length;j++){
		let lin=data[j];
		let cmp=lin.split(';');
		let f1=new Date(cmp[t1]+' '+cmp[h1]);
		let f2=new Date(cmp[t2]+' '+cmp[h2]);
		let nr=Number(cmp[rp]);		
		//console.log('now2:',r1,f1,r2,nr);
		if (f1>r1&&f1<r2){ // evento en rango
			res.push(lin);
		}else{ // si rango verificar repeticion
			if (nr==0||nr==undefined){continue}// sin repeticion next
			// repeticion esta en dias
			// f1 inicio, r1-r2 rango, rp repeticion dias
			let ra=clonaDate(r1);
			resetHMS(ra); // reset por referencia
			let rb=clonaDate(r2);
			sumaDias(rb,1); // +1 dia
			resetHMS(rb); // hasta 0h del dia siguiente
			// recorre fechas desde fecha inicio hasta fin del rango
			for (	let ff=clonaDate(f1);
						ff<=rb;
						sumaDias(ff,nr))
			{
				resetHMS(ff); // reset h:m:s:ms por referencia
				if (ff>=ra){ // fecha dentro del rango
					// cambia al presente
					lin=reemplaza(lin,3,toISO(ff)); // escribe valor en el campo3
					res.push(lin);
					break;
				}
			}	
		}
	}
	//console.log('now:',res);	
	return res
}
function toISO(f){
	return f.getFullYear()+'-'+(f.getMonth()+1)+'-'+f.getDate();
}
function reemplaza(linea,campo,valor){
// reemplaza en campo de linea por valor
	let campos=linea.split(';');
	campos[campo]=valor;
	return campos.join(';');
}
function clonaDate(f){
	let res=new Date(f.getTime());
	return res
}
function sumaDias(fecha,dias){
// suma dias
	fecha.setDate(fecha.getDate()+dias);
}
function resetHMS(f){
	f.setHours(0);
	f.setMilliseconds(0);
	f.setMinutes(0);
	f.setSeconds(0);
}
function get(tabla){
	let res=[];
	for (let j=0;j<data.length;j++){
		let lin=data[j].split(';');
		if (lin[0]==tabla){
			res.push(data[j]);
		}
	}
	//console.log(res);
	//console.log('get:',res);	
	return res
}

function join(t1,c1,t2,c2){}

function extract(tabla,campos){
	let res=[];
	for (let j=0;j<tabla.length;j++){
		let lin=tabla[j].split(';');
		let linea='';
		for(let k=0;k<lin.length;k++){
			if (campos.indexOf(k)!=-1){
				linea+=lin[k]+';';
			}
		}
		linea=linea.slice(0,linea.length-1);
		//console.log('x:',linea,linea.length);
		res.push(linea);
	}
	//console.log('extract:',res);
	return res
}

function sort3(data,campo){
// crear un mapa
// ordenarlo
	let res=[];
	let tmp=[];
	for (let j=0;j<data.length;j++){
		let lin=data[j].split(';');
		let key=new Date(lin[campo]+' '+lin[campo+1]);
		let obj={i:(j+key.getTime()),l:data[j]};
		tmp.push(obj);
		//console.log('sort2-1',j,map.get(j+key.getTime()));
	}	
	tmp.sort(function(a,b){return a.i>b.i});
	for (const x of tmp){
		res.push(x.l);
	}
	console.log('sort3:',res);
	return res;
}

function sort2(data,campo){
// crear un mapa
// ordenarlo
	let map=new Map();
	let res=[];
	for (let j=0;j<data.length;j++){

		let lin=data[j].split(';');
		let key=new Date(lin[campo]+' '+lin[campo+1]);
		map.set(j+key.getTime(),lin);  // salvar lineas mismo tiempo +j
		//console.log('sort2-1',j,map.get(j+key.getTime()));

	}	
	let maps=new Map([...map].sort());
	for (const x of maps.entries()){
		let v=x[1].join(';');
		res.push(v);
	}
	//console.log('sort2:',data,map,maps,res);
	return res;
}

function toShort(fecha){
	return (fecha.getDate()+' '+meses[fecha.getMonth()])
}
function printNext7d(titulo){
/*
act;milonga;
El Cachafaz7;
jacometrezo8;
2024-04-16;
21:00;
2024-04-16;
23:30;
7;
Maurice Gambra;
https://www.facebook.com/p/MadridTango-100064691886648/'
*/

	let data; // voy arrastrando y modificando
	let cdias=6; // rango de dias
	data=get('act'); // tabla
	data=extract(data,[1,2,3,4,5,6,7,8,9,10]); // select campos
//console.log('p7-1',data);
	data=sort2(data,3);
//console.log('p7-2',data);	
	data=now(data,cdias); // expande eventos periodicos desde hoy
	data=sort2(data,3);	
	let ele=document.createElement('div');
	let d1=new Date();
	let d2=clonaDate(d1);
	sumaDias(d2,cdias);
	//console.log('printNext7d2:',data,d1,d2);
	let txt=titulo+' - '+toShort(d1)+' to '+toShort(d2);
	let res='<br><div class="h-1 titulo1">'+txt+'</div><br><br>';
	res+='<table class="tabla">';	
	res+='<tr>';
	let dia=1;
	let sdia=-1;
	for (let j=0;j<data.length;j++){
		let campos=data[j].split(';');
		//console.log('printNext7d:',campos);
		let f=new Date(campos[3]);
		let dia=f.getDay();
		if (dia!=sdia){
			sdia=dia;
			let txt=diaSem[dia]+' '+f.getDate();
			res+='<td><h3>'+txt+'</h3></td></tr><tr>';
		}
		res+='<td class="titulo2">'+campos[1]+'</td>';
		res+='<td>'+campos[4]+' - '+campos[6]+'</td>';
		let k='et'+tipos.indexOf(campos[0]);
		res+='<td><div class='+k+'>'+campos[0]+'</div></td>';
		res+='<td>'+campos[2]+'</td>';
		let href=campos[9];
		if (href!=undefined){
			let img='<a target="_blank" href="'+href+'"><img id="ws" src="img/i2.png"></a>';
			res+='<td>'+img+'</td>';		
		}	
		ele.innerHTML=res;

		res+='</tr>';
	}
	res+='</table>';
	ele.innerHTML=res+'<br/><br/>';
		document.getElementById('contenido').appendChild(ele);}

window.onload=app;
/*
<div class=wrap>
  <h1>Dymo-tape embossed heading h1</h1>
  <h2>heading h2</h2>
  <h3>heading h3</h3>
  <h4>heading h4</h4>
  <h5>heading h5</h5>
  <h6>heading h6</h6>
</div>
*/
</script>
<script src='datos.js'></script>

</head>

<body>
<div id='contenido'></div>

<div id='pie'>
SOY UN PIE
</div>

</body>

</html> 


